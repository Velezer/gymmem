version: '3'

services:
  zookeeper-0:
      image: confluentinc/cp-zookeeper:7.0.1
      container_name: zookeeper-0
      hostname: zookeeper-0
      ports:
        - 2181:2181
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

  broker-0:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker-0
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper-0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-0:9092,PLAINTEXT_INTERNAL://broker-0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_HOSTNAME: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  spring-boot-app-1:
    build:
        context: ./gymmem
        dockerfile: Dockerfile
    image: spring-boot-app-1:latest
    depends_on:
      - postgres
      - broker-0
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-0:9092

  spring-boot-app-2:
    build:
        context: ./payment-consumer
        dockerfile: Dockerfile
    image: spring-boot-app-2:latest
    depends_on:
      - broker-0
      - spring-boot-app-3
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker-0:9092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=payment-consumer
      - MOCK_SERVICE_URL=http://spring-boot-app-3:8082

  spring-boot-app-3:
    build:
        context: ./mock
        dockerfile: Dockerfile
    image: spring-boot-app-3:latest
    hostname: spring-boot-app-3
    ports:
      - "8082:8082"
    environment:
      - SERVER_PORT=8082
